/*
 * API Reference
 *
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ResolveAnEventId200ResponseEventEntriesInnerAnyOfDataValuesInner {
    #[serde(rename = "category")]
    pub category: String,
    #[serde(rename = "level")]
    pub level: String,
    #[serde(rename = "event_id", deserialize_with = "Option::deserialize")]
    pub event_id: Option<String>,
    #[serde(rename = "timestamp")]
    pub timestamp: String,
    #[serde(rename = "data", deserialize_with = "Option::deserialize")]
    pub data: Option<serde_json::Value>,
    #[serde(rename = "message", deserialize_with = "Option::deserialize")]
    pub message: Option<String>,
    #[serde(rename = "type")]
    pub r#type: String,
}

impl ResolveAnEventId200ResponseEventEntriesInnerAnyOfDataValuesInner {
    pub fn new(category: String, level: String, event_id: Option<String>, timestamp: String, data: Option<serde_json::Value>, message: Option<String>, r#type: String) -> ResolveAnEventId200ResponseEventEntriesInnerAnyOfDataValuesInner {
        ResolveAnEventId200ResponseEventEntriesInnerAnyOfDataValuesInner {
            category,
            level,
            event_id,
            timestamp,
            data,
            message,
            r#type,
        }
    }
}


