/*
 * API Reference
 *
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ResolveAnEventId200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktrace {
    #[serde(rename = "frames")]
    pub frames: Vec<crate::models::ResolveAnEventId200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner>,
    #[serde(rename = "framesOmitted", deserialize_with = "Option::deserialize")]
    pub frames_omitted: Option<String>,
    #[serde(rename = "registers", deserialize_with = "Option::deserialize")]
    pub registers: Option<String>,
    #[serde(rename = "hasSystemFrames")]
    pub has_system_frames: bool,
}

impl ResolveAnEventId200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktrace {
    pub fn new(frames: Vec<crate::models::ResolveAnEventId200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner>, frames_omitted: Option<String>, registers: Option<String>, has_system_frames: bool) -> ResolveAnEventId200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktrace {
        ResolveAnEventId200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktrace {
            frames,
            frames_omitted,
            registers,
            has_system_frames,
        }
    }
}


