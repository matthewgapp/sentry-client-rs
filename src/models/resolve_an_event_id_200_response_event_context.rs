/*
 * API Reference
 *
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ResolveAnEventId200ResponseEventContext {
    #[serde(rename = "length", skip_serializing_if = "Option::is_none")]
    pub length: Option<i32>,
    #[serde(rename = "results", skip_serializing_if = "Option::is_none")]
    pub results: Option<Vec<i32>>,
    #[serde(rename = "session", skip_serializing_if = "Option::is_none")]
    pub session: Option<Box<crate::models::ResolveAnEventId200ResponseEventContextSession>>,
    #[serde(rename = "unauthorized", skip_serializing_if = "Option::is_none")]
    pub unauthorized: Option<bool>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
}

impl ResolveAnEventId200ResponseEventContext {
    pub fn new() -> ResolveAnEventId200ResponseEventContext {
        ResolveAnEventId200ResponseEventContext {
            length: None,
            results: None,
            session: None,
            unauthorized: None,
            url: None,
        }
    }
}


